=========
pdflatex2
=========

A Python/PDFLaTeX interface.

..
   .. image:: https://badge.fury.io/py/pdflatex2.svg
      :target: https://badge.fury.io/py/pdflatex2
      :alt: PyPI Version
   .. image:: https://readthedocs.org/projects/pdflatex2/badge/?version=latest
      :target: https://pdflatex2.readthedocs.io/en/latest/?badge=latest
      :alt: Documentation Status

Description
===========

This is a simple module to execute ``pdflatex`` in an easy and clean way.
The ``pdflatex`` command line utility by default generates a lot of output
and can create many files.

pdflatex2 is a port of the original `pdflatex
<https://pypi.org/pdflatex>`_, version 0.1.3, by Marcelo Bello.

Installation
============

Install pdflatex2 with::

  pip install pdflatex2

or add as a poetry dependency.

If you desire a package locally built with poetry, download the
source, change the appropriate lines in ``pyproject.toml``, and
rebuild.

Usage
=====

Instantiation
-------------

The PDFLaTeX class can be instantiated directly or through helpers::

  from_texfile(filename)
  from_binarystring(binstr, jobname)
  from_jinja2_template(jinja2_template, jobname = None, **render_kwargs)

where ``jobname`` is any string that can be used to create a valid
filename.

Examples
--------

In all the following examples, no files are left on the file system,
unless requested with the ``keep_pdf_file`` and ``keep_log_file``
parameters to the ``create_pdf`` method.

Create PDF from TeX/LaTeX file::

  from pdflatex2 import PDFLaTeX

  pdfl = PDFLaTeX.from_texfile('my_file.tex')
  pdf, log, completed_process = pdfl.create_pdf(
      keep_pdf_file=True,
      keep_log_file=True,
  )

The function ``create_pdf`` returns 3 results:

  #. The PDF file in a binary string.
  #. The log file generated by ``pdflatex`` as text.
  #. An instance of ``subprocess.CompleteProcess`` with the results of
     the ``pdflatex`` execution.

Also, ``create_pdf`` takes a few parameters:

  #. ``keep_pdf_file``:  Boolean, optional, defaults to ``False``.  If ``True``, a PDF file is kept.  Its location and name depends on the value of the ``--output-directory`` and ``--jobname`` parameters.  It may be derived from the TeX or Jinja template filename if no parameter is given.
  #. ``keep_log_file``:  Same as ``keep_pdf_file``, except for the log file.
  #. ``env``:  a default ENV mapping for the execution of ``pdflatex``.

Create PDF from a Jinja template::

  import os
  import pdflatex2
  import jinja2 
  
  env = pdflatex.JINJA2_ENV
  env["loader"] = jinja2.FileSystemLoader(os.path.abspath("."))
  env = jinja2.Environment(**env)
  template = env.get_template("jinja.tex")
  pdfl = pdflatex2.PDFLaTeX.from_jinja2_template(template, data="Hello world!")
  pdf, log, cp = pdfl.create_pdf()

Note that ``pdflatex`` includes a dictionary ``JINJA2_ENV`` with a
suggestion of environment parameters for you to use with Jinja2 and
LaTeX.  It os defined as::

  JINJA2_ENV = {
      "block_start_string": "\BLOCK{",
      "block_end_string": "}",
      "variable_start_string": "\VAR{",
      "variable_end_string": "}",
      "comment_start_string": "\#{",
      "comment_end_string": "}",
      "line_statement_prefix": "%%",
      "line_comment_prefix": "%#",
      "trim_blocks": True,
      "autoescape": False,
  }


Create PDF file from binary string::

  import pdflatex2

  with open("my_file.tex", "rb") as f:
      pdfl = pdflatex2.PDFLaTeX.from_binarystring(f.read(), "my_file")
  pdf, log, cp = pdfl.create_pdf()

See the source and `documentation
<https://pdflatex2.readthedocs.io/en/latest/>`_ for more information.

Copyright and License
=====================

SPDX-License-Identifier: `MIT <https://spdx.org/licenses/MIT.html>`_

pdflatex2, a Python/PDFLaTeX interface.

Copyright (C) 2022 `Jeremy A Gray <gray@flyquackswim.com>`_.
Copyright (C) 2019 Marcelo Belo.

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Author
======

`Jeremy A Gray <gray@flyquackswim.com>`_
